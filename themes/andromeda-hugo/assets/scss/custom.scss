/*
========================================================================
  Custom SCSS - Modern Healing Design System
  Adding strategic secondary color usage for therapy website
========================================================================
*/

// Secondary color variable (matches hugo.toml configuration)
$color-secondary: #7C3AED;

/*------------------------------------------------------------------
  # Secondary Buttons & Button Variants
-------------------------------------------------------------------*/

// Secondary button style for less important actions
.btn-secondary {
  background-color: $color-secondary !important;
  border: 0;
  color: $white !important;
  
  &:hover, &:active, &:focus {
    background-color: darken($color-secondary, 8%) !important;
    color: $white !important;
    transform: translateY(-1px);
  }
}

// Outline secondary button for subtle actions
.btn-outline-secondary {
  color: $color-secondary;
  border: 1px solid $color-secondary;
  background-color: transparent !important;
  
  &::after {
    background-color: $color-secondary !important;
  }
  
  &:hover, &:active, &:focus {
    color: $white !important;
    border-color: transparent !important;
    background-color: $color-secondary !important;
  }
}

/*------------------------------------------------------------------
  # Feature Cards & Interactive Elements
-------------------------------------------------------------------*/

// Alternating feature card accents for visual variety
.features .card {
  transition: all 0.3s ease;
  
  &:nth-child(even) {
    border-top: 3px solid $color-secondary;
    
    &:hover {
      border-top-width: 4px;
      transform: translateY(-2px);
    }
  }
  
  // Feature card icons with secondary color
  .icon {
    color: $color-secondary;
  }
}

/*------------------------------------------------------------------
  # Typography & Text Accents
-------------------------------------------------------------------*/

// Secondary color text utility
.text-secondary {
  color: $color-secondary !important;
}

// Highlighted text within content
.highlight-secondary {
  color: $color-secondary;
  font-weight: 600;
}

// Section subtitles with secondary color
.section-subtitle {
  color: $color-secondary;
  font-weight: 500;
}

/*------------------------------------------------------------------
  # Navigation & Links
-------------------------------------------------------------------*/

// Navigation active states
.navbar-nav .nav-link {
  &:hover, &:focus {
    color: $color-secondary !important;
  }
  
  &.active {
    color: $color-secondary !important;
    font-weight: 500;
  }
}

// Content links with secondary color
.content a {
  color: $color-secondary;
  text-decoration: none;
  transition: all 0.2s ease;
  
  &:hover {
    color: darken($color-secondary, 10%);
    text-decoration: underline;
  }
}

/*------------------------------------------------------------------
  # Form Elements & Interactive States
-------------------------------------------------------------------*/

// Form focus states with secondary color
.form-control {
  &:focus {
    border-color: $color-secondary;
    box-shadow: 0 0 0 0.2rem rgba($color-secondary, 0.25);
  }
}

// Checkbox and radio focus states
.form-check-input {
  &:checked {
    background-color: $color-secondary;
    border-color: $color-secondary;
  }
  
  &:focus {
    box-shadow: 0 0 0 0.25rem rgba($color-secondary, 0.25);
  }
}

/*------------------------------------------------------------------
  # Background & Border Utilities
-------------------------------------------------------------------*/

// Secondary background utility
.bg-secondary {
  background-color: $color-secondary !important;
}

// Secondary border utility  
.border-secondary {
  border-color: $color-secondary !important;
}

// Gradient backgrounds for hero sections
.bg-gradient-secondary {
  background: linear-gradient(135deg, $color-primary 0%, $color-secondary 100%);
}

/*------------------------------------------------------------------
  # Therapy-Specific Enhancements
-------------------------------------------------------------------*/

// Assessment test cards with secondary accents
.test-card {
  transition: all 0.3s ease;
  
  &:hover {
    border-color: $color-secondary;
    box-shadow: 0 4px 15px rgba($color-secondary, 0.15);
  }
  
  .test-icon {
    color: $color-secondary;
  }
}

// Therapy service highlights
.service-highlight {
  border-left: 4px solid $color-secondary;
  padding-left: 1rem;
  
  .service-title {
    color: $color-secondary;
  }
}

// Progress indicators and status elements
.progress-bar {
  background-color: $color-secondary;
}

.badge-secondary {
  background-color: $color-secondary;
  color: $white;
}

/*------------------------------------------------------------------
  # Hover Effects & Micro-interactions
-------------------------------------------------------------------*/

// Card hover effects with secondary color hints
.card {
  transition: all 0.3s ease;
  
  &:hover {
    .card-title {
      color: $color-secondary;
    }
  }
}

// Icon hover effects
.icon-hover {
  transition: color 0.2s ease;
  
  &:hover {
    color: $color-secondary !important;
  }
}

// Button group with mixed primary/secondary
.btn-group-mixed {
  .btn:nth-child(even) {
    background-color: $color-secondary;
    border-color: $color-secondary;
  }
}

/*------------------------------------------------------------------
  # Progress Bars & Loading Elements Override
-------------------------------------------------------------------*/

// Override any progress bars to use our emerald green
.progress-bar,
.progress .progress-bar,
.progress-bar-striped,
.progress-bar-animated {
  background-color: #059669 !important; // Our emerald green
}

// Preloader and loading elements
.preloader,
.loader,
.loading,
.spinner {
  .progress-bar,
  .progress,
  [class*="progress"] {
    background-color: #059669 !important;
    border-color: #059669 !important;
  }
}

// Override hardcoded orange in team images and similar elements
.team-image::before,
.team-member::before,
[class*="team"]::before {
  background: #059669 !important; // Replace hardcoded orange with emerald
  opacity: 0.15;
}

// Generic loaders and spinners
.la-spin,
.spinner-border,
.spinner-grow,
[class*="spin"],
[class*="loader"] {
  color: #059669 !important;
  border-color: #059669 !important;
  background-color: #059669 !important;
}

// Bootstrap progress components
.progress {
  .progress-bar {
    background-color: #059669 !important;
  }
  
  .progress-bar-secondary {
    background-color: #7C3AED !important;
  }
}

// Any remaining orange elements - catch-all
[style*="#FE6019"],
[style*="#fe6019"],
[style*="rgb(254, 96, 25)"] {
  background-color: #059669 !important;
  border-color: #059669 !important;
  color: #059669 !important;
}

/*------------------------------------------------------------------
  # SVG Elements & Graphics Override
-------------------------------------------------------------------*/

// Override SVG fill and stroke colors
svg [fill*="#FE6019"],
svg [fill*="#fe6019"],
svg [fill*="rgb(254, 96, 25)"],
svg [fill*="254 96 25"] {
  fill: #059669 !important; // Our emerald green
}

svg [stroke*="#FE6019"],
svg [stroke*="#fe6019"], 
svg [stroke*="rgb(254, 96, 25)"],
svg [stroke*="254 96 25"] {
  stroke: #059669 !important; // Our emerald green
}

// Generic SVG color overrides
svg circle[stroke*="#FE6019"],
svg circle[stroke*="#fe6019"],
svg circle[fill*="#FE6019"],
svg circle[fill*="#fe6019"] {
  stroke: #059669 !important;
  fill: #059669 !important;
}

// Progress circle specific overrides
.progress-circle,
circle.progress,
[class*="progress"] circle,
[class*="loader"] circle,
.loading circle {
  stroke: #059669 !important;
  fill: none !important;
  stroke-width: 3 !important;
}

// Any animated circles (likely the culprit)
circle[class*="animate"],
circle[class*="spin"],
.animate circle,
.spin circle {
  stroke: #059669 !important;
  stroke-dasharray: 126 !important;
  transform-origin: center !important;
}

// Canvas elements (if any progress bars are drawn with canvas)
canvas {
  filter: hue-rotate(140deg) !important; // Convert orange to green
}

/*------------------------------------------------------------------
  # Image and Logo Color Filters
-------------------------------------------------------------------*/

// Apply color filter to any images that might contain orange elements
img[src*="logo"],
img[src*="progress"],
img[src*="loader"],
.preloader img,
.loading img {
  filter: hue-rotate(140deg) saturate(1.2) !important;
}

/*------------------------------------------------------------------
  # JavaScript Generated Elements
-------------------------------------------------------------------*/

// Override any dynamically created progress elements
[style*="background: #FE6019"],
[style*="background: #fe6019"],
[style*="background-color: #FE6019"],
[style*="background-color: #fe6019"],
[style*="border-color: #FE6019"],
[style*="border-color: #fe6019"] {
  background: #059669 !important;
  background-color: #059669 !important;
  border-color: #059669 !important;
}

// Override CSS custom properties that might be set via JavaScript
* {
  --orange-color: #059669 !important;
  --primary-orange: #059669 !important;
  --brand-color: #059669 !important;
  --theme-color: #059669 !important;
}

/*------------------------------------------------------------------
  # Animation & Keyframe Overrides
-------------------------------------------------------------------*/

// Override any animation colors
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes pulse {
  0%, 100% { 
    opacity: 1;
    background-color: #059669 !important;
  }
  50% { 
    opacity: 0.5;
    background-color: #059669 !important;
  }
}

/*------------------------------------------------------------------
  # Plugin-Specific Overrides
-------------------------------------------------------------------*/

// Line Awesome icon colors
.la-spin {
  color: #059669 !important;
}

// AOS (Animate On Scroll) elements
[data-aos] {
  background-color: inherit !important;
}

// Swiper progress bars
.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  background: #059669 !important;
}

.swiper-button-next,
.swiper-button-prev {
  color: #059669 !important;
}

/*------------------------------------------------------------------
  # Beautiful "Blooming Growth + Healing Waves" Loading Animation
-------------------------------------------------------------------*/

// Replace the existing preloader with our beautiful therapeutic animation
.preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  z-index: 9999;
  transition: opacity 0.8s ease-out, visibility 0.8s ease-out;
  
  // Hide the old spinning image
  img {
    display: none !important;
  }
}

// Preloader container for our animation
.healing-loader {
  position: relative;
  width: 120px;
  height: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
}

// Healing waves that expand outward (violet)
.healing-waves {
  position: absolute;
  width: 100%;
  height: 100%;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: 2px solid rgba(124, 60, 237, 0.3); // Violet with transparency
    border-radius: 50%;
    animation: healingWaves 4s ease-in-out infinite;
  }
  
  &::before {
    animation-delay: 0s;
  }
  
  &::after {
    animation-delay: 2s;
  }
}

// Blooming flower in the center (emerald)
.blooming-flower {
  position: relative;
  width: 60px;
  height: 60px;
  animation: breathe 4s ease-in-out infinite;
}

// Individual flower petals
.flower-petal {
  position: absolute;
  width: 20px;
  height: 40px;
  background: linear-gradient(45deg, #059669, #10B981);
  border-radius: 50% 10px 50% 10px;
  transform-origin: 50% 80%;
  
  &:nth-child(1) { 
    transform: rotate(0deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite, petalRotate 12s linear infinite;
  }
  &:nth-child(2) { 
    transform: rotate(45deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 0.2s, petalRotate 12s linear infinite;
  }
  &:nth-child(3) { 
    transform: rotate(90deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 0.4s, petalRotate 12s linear infinite;
  }
  &:nth-child(4) { 
    transform: rotate(135deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 0.6s, petalRotate 12s linear infinite;
  }
  &:nth-child(5) { 
    transform: rotate(180deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 0.8s, petalRotate 12s linear infinite;
  }
  &:nth-child(6) { 
    transform: rotate(225deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 1s, petalRotate 12s linear infinite;
  }
  &:nth-child(7) { 
    transform: rotate(270deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 1.2s, petalRotate 12s linear infinite;
  }
  &:nth-child(8) { 
    transform: rotate(315deg) translateY(-15px);
    animation: petalBloom 3s ease-in-out infinite 1.4s, petalRotate 12s linear infinite;
  }
}

// Flower center (violet accent)
.flower-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 16px;
  height: 16px;
  background: radial-gradient(circle, #7C3AED, #8B5CF6);
  border-radius: 50%;
  animation: centerPulse 2s ease-in-out infinite;
  box-shadow: 0 0 20px rgba(124, 60, 237, 0.4);
}

// Therapeutic loading text
.healing-text {
  margin-top: 40px;
  font-family: 'Plus Jakarta Sans', sans-serif;
  font-size: 18px;
  font-weight: 500;
  color: #374151;
  animation: textCycle 12s ease-in-out infinite;
  text-align: center;
  letter-spacing: 0.5px;
}

// Subtle particles floating around
.healing-particles {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 4px;
    height: 4px;
    background: rgba(16, 185, 129, 0.6);
    border-radius: 50%;
    animation: floatParticles 8s ease-in-out infinite;
  }
  
  &::before {
    top: 20%;
    left: 20%;
    animation-delay: 1s;
  }
  
  &::after {
    top: 80%;
    left: 80%;
    animation-delay: 3s;
    background: rgba(124, 60, 237, 0.6);
  }
}

/*------------------------------------------------------------------
  # Animation Keyframes - Therapeutic Timing
-------------------------------------------------------------------*/

@keyframes healingWaves {
  0% {
    width: 40px;
    height: 40px;
    opacity: 1;
    border-width: 3px;
  }
  50% {
    width: 120px;
    height: 120px;
    opacity: 0.7;
    border-width: 2px;
  }
  100% {
    width: 160px;
    height: 160px;
    opacity: 0;
    border-width: 1px;
  }
}

@keyframes petalBloom {
  0%, 100% {
    transform: scale(0.8) translateY(-15px);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.1) translateY(-18px);
    opacity: 1;
  }
}

@keyframes petalRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes breathe {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes centerPulse {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
    box-shadow: 0 0 20px rgba(124, 60, 237, 0.4);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    box-shadow: 0 0 30px rgba(124, 60, 237, 0.6);
  }
}

@keyframes textCycle {
  0%, 33.33% {
    opacity: 1;
  }
  35%, 65% {
    opacity: 0;
  }
  66.66%, 100% {
    opacity: 1;
  }
}

@keyframes floatParticles {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
    opacity: 0.4;
  }
  33% {
    transform: translateY(-20px) rotate(120deg);
    opacity: 1;
  }
  66% {
    transform: translateY(-10px) rotate(240deg);
    opacity: 0.7;
  }
}

/*------------------------------------------------------------------
  # Responsive Design for Loading Animation
-------------------------------------------------------------------*/

@media (max-width: 768px) {
  .healing-loader {
    width: 100px;
    height: 100px;
  }
  
  .healing-text {
    font-size: 16px;
    margin-top: 30px;
  }
  
  .flower-petal {
    width: 16px;
    height: 32px;
  }
  
  .flower-center {
    width: 12px;
    height: 12px;
  }
}

@media (max-width: 480px) {
  .healing-loader {
    width: 80px;
    height: 80px;
  }
  
  .healing-text {
    font-size: 14px;
    margin-top: 25px;
  }
}

/*------------------------------------------------------------------
  # Integration with Existing Preloader System
-------------------------------------------------------------------*/

// Override any existing preloader content
.preloader {
  // Remove old content, add our beautiful animation
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// Inject our HTML structure via CSS content (fallback)
.preloader:empty::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 120px;
  height: 120px;
  background: 
    radial-gradient(circle at 30% 30%, rgba(5, 150, 105, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 70% 70%, rgba(124, 60, 237, 0.3) 0%, transparent 50%);
  border-radius: 50%;
  animation: simpleHealing 3s ease-in-out infinite;
}

@keyframes simpleHealing {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1) rotate(0deg);
    opacity: 0.8;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.1) rotate(180deg);
    opacity: 1;
  }
}

// Ultra high specificity override for CSS custom properties that might be set via JavaScript
* {
  --orange-color: #059669 !important;
  --primary-orange: #059669 !important;
  --brand-color: #059669 !important;
  --theme-color: #059669 !important;
}